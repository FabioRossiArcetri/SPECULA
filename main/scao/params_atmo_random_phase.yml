---

main:
  class:             'SimulParams'
  root_dir:          './calib/SCAO'         # Root directory for calibration manager
  pixel_pupil:       120                    # Linear dimension of pupil phase array
  pixel_pitch:       0.05                   # [m] Pitch of the pupil phase array
  total_time:        0.10                  # [s] Total simulation running time
  time_step:         0.001                  # [s] Simulation time step

seeing:
  class:             'RandomGenerator'
  amp:               0.4                  # This 2 values result in a 
  constant:          0.3                  # range of [0.1, 0.5]
  distribution:      'UNIFORM'
  outputs: ['output']

#sin_seeing:
#  class:             'WaveGenerator'
#  amp:               0.8                  # This 2 values result in a 
#  constant:          0.8                  # range of [0.4, 1.2]
#  freq:              50
#  offset:            0

on_axis_source:
  class:             'Source'
  polar_coordinates:  [0.0, 0.0]           # [arcsec, degrees] source polar coordinates
  magnitude:         8                    # source magnitude
  wavelengthInNm:    750                  # [nm] wavelength

pupilstop:                                # Default parameters (circular pupil)
  class: 'Pupilstop'
  simul_params_ref: 'main'

atmo:
  class:                'AtmoRandomPhase'
  simul_params_ref:  'main'
  L0:                   40                   # [m] Outer scale
  source_dict_ref:      ['on_axis_source']
  inputs:
    seeing: 'seeing.output'
    pupilstop: 'pupilstop'
  outputs: ['out_on_axis_source_ef']

modal_analysis:
  class:             'ModalAnalysis'
  type_str: zernike
  nmodes: 250
  npixels: 120
  obsratio: 0.0
  inputs:
    in_ef: 'atmo.out_on_axis_source_ef'
  outputs: ['out_modes']

pyramid:
  class:             'ModulatedPyramid'
  simul_params_ref:  'main'
  pup_diam:          40.                     # Pupil diameter in subaps.
  pup_dist:          48.                     # Separation between pupil centers in subaps.
  fov:               2.0                     # Requested field-of-view [arcsec]
  mod_amp:           0.0                     # Modulation radius (in lambda/D units)
  output_resolution: 120                     # Output sampling [usually corresponding to CCD pixels]
  wavelengthInNm:    750                     # [nm] Pyramid wavelength
  inputs:
    in_ef: 'atmo.out_on_axis_source_ef'
  outputs:  ['out_i']

detector:
  class:             'CCD'
  simul_params_ref:  'main'
  size:              [120,120]                 # Detector size in pixels
  dt:                0.001                   # [s] Detector integration time
  bandw:             300                     # [nm] Sensor bandwidth
  photon_noise:      False                    # activate photon noise
  readout_noise:     False                    # activate readout noise
  readout_level:     1.0                     # readout noise in [e-/pix/frame]
  quantum_eff:       0.32                    # quantum efficiency * total transmission
  inputs:
    in_i: 'pyramid.out_i'
  outputs:  ['out_pixels']

slopec:
  class:             'PyrSlopec'
  pupdata_object:    'scao_40x40_pupdata'            # tag of the pyramid WFS pupils
  use_sn:            False
  inputs:
    in_pixels:        'detector.out_pixels'
  outputs:  ['out_slopes', 'out_pupdata', 'total_counts', 'subap_counts']

ph_disp:
  class:         'PhaseDisplay'
  inputs:
    phase:       "atmo.out_on_axis_source_ef"
  window:           12
  title:            'PUPIL PHASE'
  disp_factor:      2


test_disp:
   class:            'ModesDisplay'
   inputs:
     modes:       "modal_analysis.out_modes"
   window:           15
   title:            'test'

#sc_disp:
#   class:            'SlopecDisplay'
#   inputs:
#     slopes:       'slopec.out_slopes'
#     pupdata:      'slopec.out_pupdata'
#   window:           16
#   disp_factor:      4


data_store:
  class:             'DataStore'
  store_dir:         './output'             # Data result directory: 'store_dir'/TN/
  data_format:       'fits'
  inputs:
    input_list: [ 'atmo_phase-atmo.out_on_axis_source_ef', 'ccd_pixels-detector.out_pixels']
